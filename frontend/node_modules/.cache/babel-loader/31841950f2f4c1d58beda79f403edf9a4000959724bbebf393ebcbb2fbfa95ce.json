{"ast":null,"code":"var _jsxFileName = \"/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ShowChat/ShowChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChatIconButton, ChatWrapper, OpenIcon, CloseIcon } from './ShowChat.styled';\nimport { Chat } from '../ChatTemplate/ChatTemplate';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShowChat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleChat = () => {\n    setIsOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatIconButton, {\n      onClick: toggleChat,\n      isOpen: isOpen,\n      children: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n        src: \"/close-chat.svg\",\n        alt: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OpenIcon, {\n        src: \"/show-chat.svg\",\n        alt: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(ChatWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ShowChat, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = ShowChat;\nvar _c;\n$RefreshReg$(_c, \"ShowChat\");","map":{"version":3,"names":["React","useState","ChatIconButton","ChatWrapper","OpenIcon","CloseIcon","Chat","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowChat","_s","isOpen","setIsOpen","toggleChat","prev","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ShowChat/ShowChat.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  ChatIconButton,\n  ChatWrapper,\n  OpenIcon,\n  CloseIcon,\n} from './ShowChat.styled';\n\nimport { Chat } from '../ChatTemplate/ChatTemplate';\n\nexport const ShowChat: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleChat = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  return (\n    <>\n      <ChatIconButton onClick={toggleChat} isOpen={isOpen}>\n        {isOpen ? (\n          <CloseIcon src=\"/close-chat.svg\" alt=\"Close\" />\n        ) : (\n          <OpenIcon src=\"/show-chat.svg\" alt=\"Open\" />\n        )}\n      </ChatIconButton>\n\n      {isOpen && (\n        <ChatWrapper>\n          <Chat />\n        </ChatWrapper>\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,cAAc,EACdC,WAAW,EACXC,QAAQ,EACRC,SAAS,QACJ,mBAAmB;AAE1B,SAASC,IAAI,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACN,cAAc;MAACgB,OAAO,EAAEH,UAAW;MAACF,MAAM,EAAEA,MAAO;MAAAI,QAAA,EACjDJ,MAAM,gBACLL,OAAA,CAACH,SAAS;QAACc,GAAG,EAAC,iBAAiB;QAACC,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE/ChB,OAAA,CAACJ,QAAQ;QAACe,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC,EAEhBX,MAAM,iBACLL,OAAA,CAACL,WAAW;MAAAc,QAAA,eACVT,OAAA,CAACF,IAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CACd;EAAA,eACD,CAAC;AAEP,CAAC;AAACZ,EAAA,CAxBWD,QAAkB;AAAAc,EAAA,GAAlBd,QAAkB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}