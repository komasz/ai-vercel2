{"ast":null,"code":"var _jsxFileName = \"/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ChatTemplate/ChatTemplate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { socket } from '../../services/socket';\nimport { ChatInput } from '../ChatInput/ChatInput';\nimport { ChatMessage } from '../ChatMessage/ChatMessage';\nimport { Conversation } from '../ChatMessage/ChatMessage.styled';\nimport { TypingIndicator } from '../Dots/Dots';\nimport { WelcomeComponent } from '../WelcomeComponent/WelcomeComponent';\nimport DataForm from '../DataForm/DataForm';\nimport { useChat } from '../../hooks/useChat';\nimport { ChatHeader, ChatLogo, ChatWrapper, InputWrapper, Container } from './ChatTemplate.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = () => {\n  _s();\n  const {\n    messages,\n    isLoading,\n    sendMessage,\n    handleRecommendMessage\n  } = useChat();\n  const messagesEndRef = useRef(null);\n  const [inputValue, setInputValue] = useState('');\n  const [clearInput, setClearInput] = useState(false);\n  const [showDataForm, setShowDataForm] = useState(false);\n  const [formInitialData, setFormInitialData] = useState({\n    firstName: '',\n    lastName: '',\n    typZabiegu: '',\n    phone: '',\n    salon: '',\n    meetingDate: ''\n  });\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const handleCommonTopicClick = topic => {\n    setInputValue(topic);\n    sendMessage(topic);\n    setClearInput(true);\n  };\n  const handleSendMessage = message => {\n    sendMessage(message);\n    setClearInput(true);\n  };\n  useEffect(() => {\n    const handleMessageEvent = event => {\n      if (event.data.action === 'recommendationMessage') {\n        const message = event.data.message;\n        console.log(event.data, 'DATA CHAT');\n        if (!messages.some(existingMessage => existingMessage.id === message.id)) {\n          handleRecommendMessage(message);\n        }\n      }\n    };\n    window.addEventListener('message', handleMessageEvent);\n    return () => {\n      window.removeEventListener('message', handleMessageEvent);\n    };\n  }, [messages, handleRecommendMessage]);\n  useEffect(() => {\n    if (clearInput) {\n      setInputValue('');\n      setClearInput(false);\n    }\n  }, [clearInput]);\n  useEffect(() => {\n    const handleConfirmation = data => {\n      console.log('confirmationMessage received:', data);\n      setFormInitialData(data);\n      setShowDataForm(true);\n    };\n    socket.on('confirmationMessage', handleConfirmation);\n    return () => {\n      socket.off('confirmationMessage', handleConfirmation);\n    };\n  }, []);\n  useEffect(() => {\n    const handleBookingResult = result => {\n      console.log('Received bookingResult:', result);\n      try {\n        if (result && result.item && result.item.output) {\n          const parsedOutput = JSON.parse(result.item.output);\n          console.log('Parsed booking result:', parsedOutput);\n          if (parsedOutput.success === true || parsedOutput.success === 'true') {\n            setShowDataForm(false);\n          } else {\n            console.warn('Booking result indicates failure.');\n          }\n        } else {\n          console.warn('Booking result does not contain expected output:', result);\n        }\n      } catch (e) {\n        console.error('Error parsing booking result:', e);\n      }\n    };\n    socket.on('bookingResult', handleBookingResult);\n    return () => {\n      socket.off('bookingResult', handleBookingResult);\n    };\n  }, []);\n  useEffect(() => {\n    const handleCloseModal = () => {\n      console.log('Received closeModal event');\n      setShowDataForm(false);\n    };\n    socket.on('closeModal', handleCloseModal);\n    return () => {\n      socket.off('closeModal', handleCloseModal);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ChatWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(ChatLogo, {\n          src: \"/chat-icon.svg\",\n          alt: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto\",\n        children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(WelcomeComponent, {\n          onCommonTopicClick: handleCommonTopicClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Conversation, {\n          children: [messages.slice().sort((a, b) => {\n            const timeA = new Date(a.timestamp).getTime();\n            const timeB = new Date(b.timestamp).getTime();\n            if (timeA !== timeB) {\n              return timeA - timeB;\n            }\n            if (a.role === b.role) return 0;\n            return a.role === 'user' ? -1 : 1;\n          }).map(message => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: message\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n        children: [showDataForm && /*#__PURE__*/_jsxDEV(DataForm, {\n          initialData: formInitialData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          onSendMessage: handleSendMessage,\n          disabled: isLoading,\n          initialValue: inputValue,\n          clearInput: clearInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"puAd5Nc7fi4aAZhqgvK4UglUMiI=\", false, function () {\n  return [useChat];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","ChatInput","ChatMessage","Conversation","TypingIndicator","WelcomeComponent","DataForm","useChat","ChatHeader","ChatLogo","ChatWrapper","InputWrapper","Container","jsxDEV","_jsxDEV","Chat","_s","messages","isLoading","sendMessage","handleRecommendMessage","messagesEndRef","inputValue","setInputValue","clearInput","setClearInput","showDataForm","setShowDataForm","formInitialData","setFormInitialData","firstName","lastName","typZabiegu","phone","salon","meetingDate","current","scrollIntoView","behavior","handleCommonTopicClick","topic","handleSendMessage","message","handleMessageEvent","event","data","action","console","log","some","existingMessage","id","window","addEventListener","removeEventListener","handleConfirmation","on","off","handleBookingResult","result","item","output","parsedOutput","JSON","parse","success","warn","e","error","handleCloseModal","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onCommonTopicClick","slice","sort","a","b","timeA","Date","timestamp","getTime","timeB","role","map","ref","initialData","onSendMessage","disabled","initialValue","_c","$RefreshReg$"],"sources":["/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ChatTemplate/ChatTemplate.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { socket } from '../../services/socket';\nimport { ChatInput } from '../ChatInput/ChatInput';\nimport { ChatMessage } from '../ChatMessage/ChatMessage';\nimport { Conversation } from '../ChatMessage/ChatMessage.styled';\nimport { TypingIndicator } from '../Dots/Dots';\nimport { WelcomeComponent } from '../WelcomeComponent/WelcomeComponent';\nimport DataForm from '../DataForm/DataForm';\nimport { useChat } from '../../hooks/useChat';\nimport {\n  ChatHeader,\n  ChatLogo,\n  ChatWrapper,\n  InputWrapper,\n  Container,\n} from './ChatTemplate.styled';\n\nexport const Chat = () => {\n  const { messages, isLoading, sendMessage, handleRecommendMessage } =\n    useChat();\n  const messagesEndRef = useRef<HTMLDivElement | null>(null);\n  const [inputValue, setInputValue] = useState('');\n  const [clearInput, setClearInput] = useState(false);\n  const [showDataForm, setShowDataForm] = useState(false);\n\n  const [formInitialData, setFormInitialData] = useState<{\n    firstName?: string;\n    lastName?: string;\n    typZabiegu?: string;\n    phone?: string;\n    salon?: string;\n    meetingDate?: string;\n  }>({\n    firstName: '',\n    lastName: '',\n    typZabiegu: '',\n    phone: '',\n    salon: '',\n    meetingDate: '',\n  });\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const handleCommonTopicClick = (topic: string) => {\n    setInputValue(topic);\n    sendMessage(topic);\n    setClearInput(true);\n  };\n\n  const handleSendMessage = (message: string) => {\n    sendMessage(message);\n    setClearInput(true);\n  };\n\n  useEffect(() => {\n    const handleMessageEvent = (event: MessageEvent) => {\n      if (event.data.action === 'recommendationMessage') {\n        const message = event.data.message;\n        console.log(event.data, 'DATA CHAT');\n        if (\n          !messages.some(existingMessage => existingMessage.id === message.id)\n        ) {\n          handleRecommendMessage(message);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleMessageEvent);\n    return () => {\n      window.removeEventListener('message', handleMessageEvent);\n    };\n  }, [messages, handleRecommendMessage]);\n\n  useEffect(() => {\n    if (clearInput) {\n      setInputValue('');\n      setClearInput(false);\n    }\n  }, [clearInput]);\n\n  useEffect(() => {\n    const handleConfirmation = (data: any) => {\n      console.log('confirmationMessage received:', data);\n      setFormInitialData(data);\n      setShowDataForm(true);\n    };\n\n    socket.on('confirmationMessage', handleConfirmation);\n    return () => {\n      socket.off('confirmationMessage', handleConfirmation);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleBookingResult = (result: any) => {\n      console.log('Received bookingResult:', result);\n      try {\n        if (result && result.item && result.item.output) {\n          const parsedOutput = JSON.parse(result.item.output);\n          console.log('Parsed booking result:', parsedOutput);\n\n          if (\n            parsedOutput.success === true ||\n            parsedOutput.success === 'true'\n          ) {\n            setShowDataForm(false);\n          } else {\n            console.warn('Booking result indicates failure.');\n          }\n        } else {\n          console.warn(\n            'Booking result does not contain expected output:',\n            result,\n          );\n        }\n      } catch (e) {\n        console.error('Error parsing booking result:', e);\n      }\n    };\n\n    socket.on('bookingResult', handleBookingResult);\n    return () => {\n      socket.off('bookingResult', handleBookingResult);\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleCloseModal = () => {\n      console.log('Received closeModal event');\n      setShowDataForm(false);\n    };\n\n    socket.on('closeModal', handleCloseModal);\n    return () => {\n      socket.off('closeModal', handleCloseModal);\n    };\n  }, []);\n\n  return (\n    <Container>\n      <ChatWrapper>\n        <ChatHeader>\n          <ChatLogo src=\"/chat-icon.svg\" alt=\"Icon\" />\n          <h1 className=\"text-xl font-semibold\">Chat</h1>\n        </ChatHeader>\n\n        <div className=\"overflow-y-auto\">\n          {messages.length === 0 ? (\n            <WelcomeComponent onCommonTopicClick={handleCommonTopicClick} />\n          ) : (\n            <Conversation>\n              {messages\n                .slice()\n                .sort((a, b) => {\n                  const timeA = new Date(a.timestamp).getTime();\n                  const timeB = new Date(b.timestamp).getTime();\n                  if (timeA !== timeB) {\n                    return timeA - timeB;\n                  }\n                  if (a.role === b.role) return 0;\n                  return a.role === 'user' ? -1 : 1;\n                })\n                .map(message => (\n                  <ChatMessage key={message.id} message={message} />\n                ))}\n              {isLoading && <TypingIndicator />}\n            </Conversation>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n        <InputWrapper>\n          {showDataForm && <DataForm initialData={formInitialData} />}\n          <ChatInput\n            onSendMessage={handleSendMessage}\n            disabled={isLoading}\n            initialValue={inputValue}\n            clearInput={clearInput}\n          />\n        </InputWrapper>\n      </ChatWrapper>\n    </Container>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}