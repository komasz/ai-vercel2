{"ast":null,"code":"var _jsxFileName = \"/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ChatMessage/ChatMessage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Markdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport { BotAnswer, BotAnswerWrapper, ConversationWrapper, Motion, StyledA, StyledImage, StyledOL, StyledP, StyledUL, UserAnswer, ChatAnswerLogo } from './ChatMessage.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messageVariants = {\n  hidden: {\n    opacity: 0,\n    y: 20\n  },\n  visible: {\n    opacity: 1,\n    y: 0\n  },\n  exit: {\n    opacity: 0,\n    y: -20\n  }\n};\nexport const ChatMessage = ({\n  message\n}) => {\n  _s();\n  const isBot = message.role === 'assistant';\n  const fullContent = typeof message.content === 'string' ? message.content : message.content.message;\n  const [displayedText, setDisplayedText] = useState('');\n  const [textIndex, setTextIndex] = useState(0);\n  const messageRef = useRef(null);\n  useEffect(() => {\n    if (isBot && messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [displayedText, isBot]);\n  useEffect(() => {\n    if (!isBot && messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [isBot]);\n  useEffect(() => {\n    if (!isBot || !fullContent) return;\n    const interval = setInterval(() => {\n      if (textIndex < fullContent.length) {\n        const nextChar = fullContent[textIndex];\n        if (nextChar === '!' && fullContent.slice(textIndex).startsWith('![')) {\n          const match = fullContent.slice(textIndex).match(/!\\[.*?\\]\\(.*?\\)/);\n          if (match) {\n            setDisplayedText(prev => prev + match[0]);\n            setTextIndex(prev => prev + match[0].length);\n            return;\n          }\n        }\n        if (nextChar === '[' && fullContent.slice(textIndex).startsWith('[')) {\n          const match = fullContent.slice(textIndex).match(/\\[.*?\\]\\(.*?\\)/);\n          if (match) {\n            setDisplayedText(prev => prev + match[0]);\n            setTextIndex(prev => prev + match[0].length);\n            return;\n          }\n        }\n        setDisplayedText(prev => prev + nextChar);\n        setTextIndex(prev => prev + 1);\n      } else {\n        clearInterval(interval);\n        if (messageRef.current) {\n          messageRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n          });\n        }\n      }\n    }, 8);\n    return () => clearInterval(interval);\n  }, [isBot, fullContent, textIndex]);\n  return /*#__PURE__*/_jsxDEV(Motion, {\n    variants: messageVariants,\n    initial: \"hidden\",\n    animate: \"visible\",\n    exit: \"exit\",\n    transition: {\n      duration: 0.5\n    },\n    children: /*#__PURE__*/_jsxDEV(ConversationWrapper, {\n      isBot: isBot,\n      ref: messageRef,\n      children: /*#__PURE__*/_jsxDEV(BotAnswer, {\n        children: [isBot && /*#__PURE__*/_jsxDEV(ChatAnswerLogo, {\n          src: \"/chat-answer-logo.svg\",\n          alt: \"Chat answer icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), isBot ? /*#__PURE__*/_jsxDEV(BotAnswerWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Markdown, {\n            rehypePlugins: [rehypeHighlight],\n            components: {\n              a: ({\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(StyledA, {\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 40\n              }, this),\n              p: ({\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(StyledP, {\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 40\n              }, this),\n              ol: ({\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(StyledOL, {\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this),\n              ul: ({\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(StyledUL, {\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this),\n              img: ({\n                src,\n                alt\n              }) => /*#__PURE__*/_jsxDEV(StyledImage, {\n                src: src,\n                alt: alt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 42\n              }, this)\n            },\n            children: displayedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UserAnswer, {\n          children: fullContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatMessage, \"epz+57Wulful+izWNn5EevyO6oI=\");\n_c = ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Markdown","rehypeHighlight","BotAnswer","BotAnswerWrapper","ConversationWrapper","Motion","StyledA","StyledImage","StyledOL","StyledP","StyledUL","UserAnswer","ChatAnswerLogo","jsxDEV","_jsxDEV","messageVariants","hidden","opacity","y","visible","exit","ChatMessage","message","_s","isBot","role","fullContent","content","displayedText","setDisplayedText","textIndex","setTextIndex","messageRef","current","scrollIntoView","behavior","block","interval","setInterval","length","nextChar","slice","startsWith","match","prev","clearInterval","variants","initial","animate","transition","duration","children","ref","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","rehypePlugins","components","a","props","p","ol","ul","img","_c","$RefreshReg$"],"sources":["/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/ChatMessage/ChatMessage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { ReactElement } from 'react';\nimport Markdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\n\nimport { BotMessage, UserMessage } from '../../types/chat';\n\nimport {\n  BotAnswer,\n  BotAnswerWrapper,\n  ConversationWrapper,\n  Motion,\n  StyledA,\n  StyledImage,\n  StyledOL,\n  StyledP,\n  StyledUL,\n  UserAnswer,\n  ChatAnswerLogo,\n} from './ChatMessage.styled';\n\ninterface ChatMessageProps {\n  message: UserMessage | BotMessage;\n}\n\nconst messageVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: -20 },\n};\n\nexport const ChatMessage: (props: ChatMessageProps) => ReactElement = ({\n  message,\n}) => {\n  const isBot = message.role === 'assistant';\n  const fullContent =\n    typeof message.content === 'string'\n      ? message.content\n      : message.content.message;\n\n  const [displayedText, setDisplayedText] = useState('');\n  const [textIndex, setTextIndex] = useState(0);\n\n  const messageRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (isBot && messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      });\n    }\n  }, [displayedText, isBot]);\n\n  useEffect(() => {\n    if (!isBot && messageRef.current) {\n      messageRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      });\n    }\n  }, [isBot]);\n\n  useEffect(() => {\n    if (!isBot || !fullContent) return;\n\n    const interval = setInterval(() => {\n      if (textIndex < fullContent.length) {\n        const nextChar = fullContent[textIndex];\n\n        if (nextChar === '!' && fullContent.slice(textIndex).startsWith('![')) {\n          const match = fullContent.slice(textIndex).match(/!\\[.*?\\]\\(.*?\\)/);\n          if (match) {\n            setDisplayedText(prev => prev + match[0]);\n            setTextIndex(prev => prev + match[0].length);\n            return;\n          }\n        }\n\n        if (nextChar === '[' && fullContent.slice(textIndex).startsWith('[')) {\n          const match = fullContent.slice(textIndex).match(/\\[.*?\\]\\(.*?\\)/);\n          if (match) {\n            setDisplayedText(prev => prev + match[0]);\n            setTextIndex(prev => prev + match[0].length);\n            return;\n          }\n        }\n\n        setDisplayedText(prev => prev + nextChar);\n        setTextIndex(prev => prev + 1);\n      } else {\n        clearInterval(interval);\n        if (messageRef.current) {\n          messageRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          });\n        }\n      }\n    }, 8);\n\n    return () => clearInterval(interval);\n  }, [isBot, fullContent, textIndex]);\n\n  return (\n    <Motion\n      variants={messageVariants}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      transition={{ duration: 0.5 }}\n    >\n      <ConversationWrapper isBot={isBot} ref={messageRef}>\n        <BotAnswer>\n          {isBot && (\n            <ChatAnswerLogo\n              src=\"/chat-answer-logo.svg\"\n              alt=\"Chat answer icon\"\n            />\n          )}\n          {isBot ? (\n            <BotAnswerWrapper>\n              <Markdown\n                rehypePlugins={[rehypeHighlight]}\n                components={{\n                  a: ({ ...props }) => <StyledA {...props} />,\n                  p: ({ ...props }) => <StyledP {...props} />,\n                  ol: ({ ...props }) => <StyledOL {...props} />,\n                  ul: ({ ...props }) => <StyledUL {...props} />,\n                  img: ({ src, alt }) => <StyledImage src={src!} alt={alt!} />,\n                }}\n              >\n                {displayedText}\n              </Markdown>\n            </BotAnswerWrapper>\n          ) : (\n            <UserAnswer>{fullContent}</UserAnswer>\n          )}\n        </BotAnswer>\n      </ConversationWrapper>\n    </Motion>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}