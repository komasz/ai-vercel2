{"ast":null,"code":"var _jsxFileName = \"/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/AudioChat/AudioChat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { socket } from '../../services/socket';\nimport { makeAutoObservable } from 'mobx';\nimport { AudioChatIconButton, AudioChatRuningIcon, StopAudioIconButton, ChatRuningWrapper } from './AudioChat.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AudioQueueManager {\n  constructor() {\n    this.audioQueue = [];\n    this.isPlaying = false;\n    this.pitchFactor = 0.5;\n    makeAutoObservable(this);\n  }\n  setPitchFactor(factor) {\n    this.pitchFactor = factor;\n  }\n  addAudioToQueue(audioData) {\n    this.audioQueue.push(audioData);\n    this.playNext();\n  }\n  async playNext() {\n    if (this.isPlaying || this.audioQueue.length === 0) return;\n    this.isPlaying = true;\n    const audioData = this.audioQueue.shift();\n    await this.playAudio(audioData);\n    this.isPlaying = false;\n    this.playNext();\n  }\n  playAudio(audioBuffer) {\n    return new Promise(resolve => {\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const binaryString = atob(audioBuffer);\n      const len = binaryString.length;\n      const int16Array = new Int16Array(len / 2);\n      for (let i = 0; i < len; i += 2) {\n        int16Array[i / 2] = binaryString.charCodeAt(i) | binaryString.charCodeAt(i + 1) << 8;\n      }\n      const float32Array = new Float32Array(int16Array.length);\n      for (let i = 0; i < int16Array.length; i++) {\n        float32Array[i] = int16Array[i] / 0x7fff;\n      }\n      const audioBufferObj = audioContext.createBuffer(1, float32Array.length, audioContext.sampleRate);\n      audioBufferObj.copyToChannel(float32Array, 0);\n      const source = audioContext.createBufferSource();\n      source.buffer = audioBufferObj;\n      source.playbackRate.value = this.pitchFactor;\n      source.connect(audioContext.destination);\n      source.onended = () => resolve();\n      source.start(0);\n    });\n  }\n  stopAudio() {\n    this.isPlaying = false;\n    this.audioQueue = [];\n  }\n}\nlet audioContext = null;\nlet mediaStream = null;\nconst AudioChat = ({\n  voiceEnabled,\n  onVoiceStart,\n  onVoiceStop\n}) => {\n  _s();\n  const audioQueueManager = useMemo(() => new AudioQueueManager(), []);\n  const handleStartVoiceChat = useCallback(async () => {\n    onVoiceStart();\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          sampleRate: 24000,\n          channelCount: 1,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      mediaStream = stream;\n      audioContext = new AudioContext({\n        sampleRate: 24000\n      });\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(4096, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n      processor.onaudioprocess = event => {\n        const inputBuffer = event.inputBuffer;\n        const inputData = inputBuffer.getChannelData(0);\n        const int16Array = new Int16Array(inputData.length);\n        for (let i = 0; i < inputData.length; i++) {\n          int16Array[i] = Math.min(1, Math.max(-1, inputData[i])) * 0x7fff;\n        }\n        const base64String = btoa(String.fromCharCode(...new Uint8Array(int16Array.buffer)));\n        socket.emit('audioInput', base64String);\n      };\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  }, [onVoiceStart]);\n  const handleStopVoiceChat = useCallback(() => {\n    onVoiceStop();\n    if (audioContext) {\n      audioContext.close();\n      audioContext = null;\n    }\n    if (mediaStream) {\n      mediaStream.getTracks().forEach(track => track.stop());\n      mediaStream = null;\n    }\n  }, [onVoiceStop]);\n  useEffect(() => {\n    function handleAudioResponse(data) {\n      console.log(data.item_id);\n      if (data.delta) {\n        audioQueueManager.addAudioToQueue(data.delta);\n      }\n    }\n    if (voiceEnabled) {\n      socket.on('audioResponse', handleAudioResponse);\n    }\n    return () => {\n      socket.off('audioResponse', handleAudioResponse);\n    };\n  }, [voiceEnabled, audioQueueManager]);\n  useEffect(() => {\n    function handleSpeechStarted() {\n      audioQueueManager.stopAudio();\n    }\n    socket.on('speechStarted', handleSpeechStarted);\n    return () => {\n      socket.off('speechStarted', handleSpeechStarted);\n    };\n  }, [audioQueueManager]);\n  if (!voiceEnabled) {\n    return /*#__PURE__*/_jsxDEV(AudioChatIconButton, {\n      onClick: handleStartVoiceChat,\n      src: \"/audio-chat-icon.svg\",\n      alt: \"Audio Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ChatRuningWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(StopAudioIconButton, {\n        onClick: handleStopVoiceChat,\n        src: \"/arrow-back-icon.svg\",\n        alt: \"Stop Audio Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioChatRuningIcon, {\n        onClick: handleStopVoiceChat,\n        src: \"/audio-chat-icon-run.svg\",\n        alt: \"Chat runing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(AudioChat, \"I1pNIMUTF7UqAziX7/yv4oMFNUI=\");\n_c = AudioChat;\nexport default AudioChat;\nvar _c;\n$RefreshReg$(_c, \"AudioChat\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","socket","makeAutoObservable","AudioChatIconButton","AudioChatRuningIcon","StopAudioIconButton","ChatRuningWrapper","jsxDEV","_jsxDEV","AudioQueueManager","constructor","audioQueue","isPlaying","pitchFactor","setPitchFactor","factor","addAudioToQueue","audioData","push","playNext","length","shift","playAudio","audioBuffer","Promise","resolve","audioContext","window","AudioContext","webkitAudioContext","binaryString","atob","len","int16Array","Int16Array","i","charCodeAt","float32Array","Float32Array","audioBufferObj","createBuffer","sampleRate","copyToChannel","source","createBufferSource","buffer","playbackRate","value","connect","destination","onended","start","stopAudio","mediaStream","AudioChat","voiceEnabled","onVoiceStart","onVoiceStop","_s","audioQueueManager","handleStartVoiceChat","stream","navigator","mediaDevices","getUserMedia","audio","channelCount","echoCancellation","noiseSuppression","autoGainControl","createMediaStreamSource","processor","createScriptProcessor","onaudioprocess","event","inputBuffer","inputData","getChannelData","Math","min","max","base64String","btoa","String","fromCharCode","Uint8Array","emit","error","console","handleStopVoiceChat","close","getTracks","forEach","track","stop","handleAudioResponse","data","log","item_id","delta","on","off","handleSpeechStarted","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/komasz/Documents/GitHub/ai-voice/frontend/src/components/AudioChat/AudioChat.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport { socket } from '../../services/socket';\nimport { makeAutoObservable } from 'mobx';\nimport {\n  AudioChatIconButton,\n  AudioChatRuningIcon,\n  StopAudioIconButton,\n  ChatRuningWrapper,\n} from './AudioChat.styled';\n\nclass AudioQueueManager {\n  audioQueue: string[] = [];\n  isPlaying = false;\n  pitchFactor = 0.5;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setPitchFactor(factor: number) {\n    this.pitchFactor = factor;\n  }\n\n  addAudioToQueue(audioData: string) {\n    this.audioQueue.push(audioData);\n    this.playNext();\n  }\n\n  async playNext() {\n    if (this.isPlaying || this.audioQueue.length === 0) return;\n\n    this.isPlaying = true;\n    const audioData = this.audioQueue.shift() as string;\n    await this.playAudio(audioData);\n\n    this.isPlaying = false;\n    this.playNext();\n  }\n\n  playAudio(audioBuffer: string): Promise<void> {\n    return new Promise(resolve => {\n      const audioContext = new (window.AudioContext ||\n        (window as any).webkitAudioContext)();\n\n      const binaryString = atob(audioBuffer);\n      const len = binaryString.length;\n      const int16Array = new Int16Array(len / 2);\n\n      for (let i = 0; i < len; i += 2) {\n        int16Array[i / 2] =\n          binaryString.charCodeAt(i) | (binaryString.charCodeAt(i + 1) << 8);\n      }\n\n      const float32Array = new Float32Array(int16Array.length);\n      for (let i = 0; i < int16Array.length; i++) {\n        float32Array[i] = int16Array[i] / 0x7fff;\n      }\n\n      const audioBufferObj = audioContext.createBuffer(\n        1,\n        float32Array.length,\n        audioContext.sampleRate,\n      );\n      audioBufferObj.copyToChannel(float32Array, 0);\n\n      const source = audioContext.createBufferSource();\n      source.buffer = audioBufferObj;\n      source.playbackRate.value = this.pitchFactor;\n\n      source.connect(audioContext.destination);\n      source.onended = () => resolve();\n      source.start(0);\n    });\n  }\n\n  stopAudio() {\n    this.isPlaying = false;\n    this.audioQueue = [];\n  }\n}\n\ninterface AudioChatProps {\n  voiceEnabled: boolean;\n  onVoiceStart: () => void;\n  onVoiceStop: () => void;\n}\n\nlet audioContext: AudioContext | null = null;\nlet mediaStream: MediaStream | null = null;\n\nconst AudioChat: React.FC<AudioChatProps> = ({\n  voiceEnabled,\n  onVoiceStart,\n  onVoiceStop,\n}) => {\n  const audioQueueManager = useMemo(() => new AudioQueueManager(), []);\n\n  const handleStartVoiceChat = useCallback(async () => {\n    onVoiceStart();\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          sampleRate: 24000,\n          channelCount: 1,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        },\n      });\n      mediaStream = stream;\n\n      audioContext = new AudioContext({ sampleRate: 24000 });\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(4096, 1, 1);\n\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n\n      processor.onaudioprocess = event => {\n        const inputBuffer = event.inputBuffer;\n        const inputData = inputBuffer.getChannelData(0);\n\n        const int16Array = new Int16Array(inputData.length);\n        for (let i = 0; i < inputData.length; i++) {\n          int16Array[i] = Math.min(1, Math.max(-1, inputData[i])) * 0x7fff;\n        }\n\n        const base64String = btoa(\n          String.fromCharCode(...new Uint8Array(int16Array.buffer)),\n        );\n        socket.emit('audioInput', base64String);\n      };\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n    }\n  }, [onVoiceStart]);\n\n  const handleStopVoiceChat = useCallback(() => {\n    onVoiceStop();\n    if (audioContext) {\n      audioContext.close();\n      audioContext = null;\n    }\n    if (mediaStream) {\n      mediaStream.getTracks().forEach(track => track.stop());\n      mediaStream = null;\n    }\n  }, [onVoiceStop]);\n\n  useEffect(() => {\n    function handleAudioResponse(data: any) {\n      console.log(data.item_id)\n      if (data.delta) {\n        audioQueueManager.addAudioToQueue(data.delta);\n      }\n    }\n    if (voiceEnabled) {\n      socket.on('audioResponse', handleAudioResponse);\n    }\n    return () => {\n      socket.off('audioResponse', handleAudioResponse);\n    };\n  }, [voiceEnabled, audioQueueManager]);\n\n  useEffect(() => {\n    function handleSpeechStarted() {\n      audioQueueManager.stopAudio();\n    }\n    socket.on('speechStarted', handleSpeechStarted);\n    return () => {\n      socket.off('speechStarted', handleSpeechStarted);\n    };\n  }, [audioQueueManager]);\n\n  if (!voiceEnabled) {\n    return (\n      <AudioChatIconButton\n        onClick={handleStartVoiceChat}\n        src=\"/audio-chat-icon.svg\"\n        alt=\"Audio Chat\"\n      />\n    );\n  } else {\n    return (\n      <ChatRuningWrapper>\n        <StopAudioIconButton\n          onClick={handleStopVoiceChat}\n          src=\"/arrow-back-icon.svg\"\n          alt=\"Stop Audio Chat\"\n        />\n        <AudioChatRuningIcon\n          onClick={handleStopVoiceChat}\n          src=\"/audio-chat-icon-run.svg\"\n          alt=\"Chat runing\"\n        />\n      </ChatRuningWrapper>\n    );\n  }\n};\n\nexport default AudioChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}